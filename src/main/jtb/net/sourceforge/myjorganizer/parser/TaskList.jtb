options{  JDK_VERSION = "1.6";  static = true;}PARSER_BEGIN(TaskListParser)package net.sourceforge.myjorganizer.parser;import net.sourceforge.myjorganizer.parser.syntaxtree.*;import net.sourceforge.myjorganizer.parser.visitor.*;public class TaskListParser{  public static void main(String args []) throws ParseException  {    TaskListParser parser = new TaskListParser(System.in);    TaskListParser.TaskList();  }}PARSER_END(TaskListParser)SKIP :{  " "| "\t"| "\n"| "\r"| < "//" (~[ "\n", "\r" ])*    (      "\n"    | "\r"    | "\r\n"    ) >| < "/*" (~[ "*" ])* "*"    (      ~[ "/" ] (~[ "*" ])* "*"    )*    "/" >}/* KEYWORDS */TOKEN :{  < TASK : "task" >| < REPEATS : "repeats" >| < DEPENDENCIES : "dependencies" >| < END : "end" >| < NOT : "not" >}TOKEN :{  < LPAREN : "(" >| < RPAREN : ")" >| < LBRACE : "{" >| < RBRACE : "}" >| < LBRACKET : "[" >| < RBRACKET : "]" >| < SEMICOLON : ";" >| < COLON : ":" >| < COMMA : "," >| < DOT : "." >| < DOLLAR : "$" >| < PERCENT : "%" >}/* LITERALS */TOKEN :{  < IDENTIFIER : < DOLLAR > (< IDENTIFIER_CHAR >)* >| < #IDENTIFIER_CHAR : ([ "_", "A"-"Z", "a"-"z", "0"-"9" ]) >| < INTEGER_LITERAL : [ "1"-"9" ] ([ "0"-"9" ])* >| < STRING_LITERAL :    "\""    (      (~[ "\"", "\\", "\n", "\r" ])    |      (        "\\"        (          [ "n", "t", "b", "r", "f", "\\", "'", "\"" ]        | [ "0"-"7" ] ([ "0"-"7" ])?        | [ "0"-"3" ] [ "0"-"7" ] [ "0"-"7" ]        )      )    )*    "\"" >| < BOOL_LITERAL :    "true"  | "false" >| < DATE_LITERAL : (["0"-"9"])+"-"(["0"-"9"])+"-"(["0"-"9"])+ >}void TaskList() :{}{  (    TaskDefinition()  )*}void TaskDefinition() :{}{  < TASK > [ < IDENTIFIER > ] < COLON > TaskTitle() [ TaskDescription() ] [ TaskCompletion() ] [ TaskUrgency() ] [ TaskImportance() ] [ TaskStatus() ] [ DependencyList() ] < END > < TASK >}void TaskTitle() :{}{  "title" < COLON > < STRING_LITERAL >}void TaskDescription() :{}{  "description" < COLON > < STRING_LITERAL >}void TaskCompletion() :{}{  "completion" < COLON > < INTEGER_LITERAL > < PERCENT >}void TaskUrgency() :{}{  "urgent" < COLON > < BOOL_LITERAL >}void TaskImportance() :{}{  "important" < COLON > < BOOL_LITERAL >}void TaskStartDate() :{}{  "startdate" < COLON > < DATE_LITERAL >}void TaskDueDate() :{}{  "duedate" < COLON > < DATE_LITERAL >}void TaskStatus() :{}{  "status" < COLON > < STRING_LITERAL >}void DependencyDefinition() :{}{  (    "before"  | "after"  | "childof"  )  < IDENTIFIER > (< COMMA > < IDENTIFIER >)*}void DependencyList() :{}{  < DEPENDENCIES > < COLON >  (    DependencyDefinition()  )+  < END > < DEPENDENCIES >}
PARSER_BEGIN(TaskListParser)package net.sourceforge.myjorganizer.parser;public class TaskListParser{}PARSER_END(TaskListParser)SKIP :{  < " " >| < "\t" >| < "\n" >}TOKEN :{  < TASK : "task" >| < DUES : "dues" >| < REPEATS : "repeats" >| < DEPENDENCIES : "dependencies" >| < DEPENDSON : "dependson" >| < BEFORE : "before" >| < SUBTASK : "subtask" >}TOKEN :{  < LBRACE : "{" >| < RBRACE : "}" >}/* LITERALS */TOKEN :{  < IDENTIFIER :    < IDENTIFIER_START >    (      < IDENTIFIER_START >    | < IDENTIFIER_CHAR >    )* >| < #IDENTIFIER_START : ([ "_", "A"-"Z", "a"-"z" ]) >| < #IDENTIFIER_CHAR : ([ "_", "A"-"Z", "a"-"z", "0"-"9" ]) >}void TaskDefinition() :{}{  < TASK > < IDENTIFIER > < LBRACE > DependencyList() < RBRACE >}void DependencyDefinition() :{}{  < DEPENDSON > < TASK > < IDENTIFIER >    < BEFORE >  | < SUBTASK >}void DependencyList() :{}{  (    < DEPENDENCIES > < LBRACE >    (      DependencyDefinition()    )*    < RBRACE >  )}